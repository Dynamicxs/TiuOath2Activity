spring.security.oauth2.client.registration.google.client-id=34256545425-c9osokcbuulre3e22sp7mh0ou4970cpo.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google

spring.security.oauth2.client.registration.github.client-id=Ov23litYmsqoAPpMTIAl
spring.security.oauth2.client.registration.github.client-secret=acc645863711b3a40f945dec1f59568357cfc364
spring.security.oauth2.client.registration.github.scope=user:email
spring.security.oauth2.client.registration.github.redirect-uri=http://localhost:8080/login/oauth2/code/github

spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth?prompt=select_account


# H2 Console enabled
!spring.h2.console.enabled=true
!spring.h2.console.path=/h2-console

# JDBC URL for in-memory H2 database
!spring.datasource.url=jdbc:h2:~/test
!spring.datasource.driver-class-name=org.h2.Driver
!spring.datasource.username=sa
!spring.datasource.password=

# JPA/Hibernate auto-creation
!spring.jpa.hibernate.ddl-auto=create

# Optional: show generated SQL in logs
!spring.jpa.show-sql=true
!spring.jpa.properties.hibernate.format_sql=true

# Use H2 dialect
!spring.jpa.database-platform=org.hibernate.dialect.H2Dialect




# MySQL Connection
spring.datasource.url=jdbc:mysql://localhost:3306/tiu_oauth2_db
spring.datasource.username=root
spring.datasource.password=Fiscal.Paladin7
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# prevent SSL warning
spring.datasource.hikari.data-source-properties.useSSL=false